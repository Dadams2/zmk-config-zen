/*
*
* Copyright (c) 2023 David Adams
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
    flavor = "hold-preferred";
    tapping-term-ms = <190>;
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <190>;
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | ENT |   | SPC | RSE  | ALT |
                        bindings = <
   &kp ESC  &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &mt LGUI A &mt LALT S &mt LSHIFT D &mt LCTL F &kp G   &kp H &mt RCTRL J  &mt RSHFT K     &mt LALT L   &mt LGUI SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp LGUI
                &kp LSFT  &lt 2 ESC &mt LGUI RET   &mt RGUI  SPACE &mt RSHFT TAB &mo 1
                        >;
                };
                lower_layer {
                        label = "NUMBER";
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                          	        &kp LGUI     &mo 3       &kp RET      &kp SPACE  &trans   &kp RALT
                        >;
                };

                raise_layer {
                        label = "SYMBOL";
// -----------------------------------------------------------------------------------------
// |  ~   |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL | "|" |  \  |  =  |  -  |  (  |   |  )  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |  {  |  }  |  +  |  _  |  [  |   |  ]  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   /* &kp LCTRL &kp PIPE   &kp BSLH &kp EQUAL   &kp MINUS   &kp LPAR      &kp RPAR &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE */
   &kp LCTRL &kp LEFT &kp DOWN &kp UP &kp RIGHT   &kp MINUS      &kp RPAR &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &kp LBRC   &kp RBRC &kp PLUS   &kp UNDER   &kp UNDER      &kp RBRC &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                    	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};

                        //label = "SYMBOL";
// -----------------------------------------------------------------------------------------
// |  ~   |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL | "|" |  \  |  =  |  -  |  (  |   |  )  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |  {  |  }  |  +  |  _  |  [  |   |  ]  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        //bindings = <
   //&kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   //&kp LCTRL &kp PIPE   &kp BSLH &kp EQUAL   &kp MINUS   &LPAR      &kp RPAR &kp EQUAL &kp LBKT &kp RBKT &kp BSLH &kp GRAVE
   //&kp LSHFT &kp LBRC   &kp RBRC &kp PLUS   &kp UNDER   &kp LBKT      &kp RBKT &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     //&kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
